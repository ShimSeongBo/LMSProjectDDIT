<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.LectureApplyMapper">
	<sql id="yrNsem">
		<if test="yrNsem != null and !yrNsem.equals('')">
			AND     L.LECA_YR || L.LECA_SEM = #{yrNsem}
		</if>
	</sql>

<!-- 	<resultMap type="professor" id="lecApplyMap"> -->
<!-- 		<result property="proPos" column="PRO_POS" /> -->
<!-- 		<result property="proNo" column="PRO_NO" /> -->
		
<!-- 		<collection property="employeeList" resultMap="authMap"></collection> -->
<!-- 	</resultMap> -->
	
<!-- 	<resultMap type="employee" id="authMap"> -->
<!-- 		<result property="empNo" column="EMP_NO" /> -->
<!-- 		<result property="empNm" column="EMP_NM" /> -->
<!-- 		<result property="empTel" column="EMP_TEL" /> -->
<!-- 		<result property="empReg" column="EMP_REG" /> -->
<!-- 	</resultMap> -->

<!-- 	<select id="detail" parameterType="int" resultMap="lecApplyMap"> -->
<!-- 		SELECT  P.PRO_NO -->
<!-- 		        , P.DEP_CD -->
<!-- 		        , P.PRO_POS -->
<!-- 		        , E.EMP_NO -->
<!-- 		        , E.EMP_NM -->
<!-- 		        , E.EMP_NME -->
<!-- 		        , E.EMP_TEL -->
<!-- 		        , E.EMP_TEL2 -->
<!-- 		        , E.EMP_ZIP -->
<!-- 		        , E.EMP_ADDR1 -->
<!-- 		        , E.EMP_ADDR2 -->
<!-- 		        , E.EMP_REG -->
<!-- 		        , E.EMP_BANK_CD -->
<!-- 		        , E.EMP_DEPO -->
<!-- 		        , E.EMP_ACT -->
<!-- 		        , E.EMP_PIC -->
<!-- 		        , E.EMP_JOIN -->
<!-- 		        , E.EMP_RET -->
<!-- 		FROM    PROFESSOR P INNER JOIN EMPLOYEE E ON(P.PRO_NO = E.EMP_NO) -->
<!-- 		WHERE   P.PRO_NO = #{proNo} -->
<!-- 	</select> -->
	
	<select id="proInfo" parameterType="int" resultType="professor">
		SELECT  P.PRO_NO
		        , E.EMP_NM
		        , CASE  WHEN SUBSTR(E.EMP_REG, 8, 1) in ('1', '2') THEN '19'
		                WHEN SUBSTR(E.EMP_REG, 8, 1) in ('3', '4') THEN '20'
		        END || 
		        SUBSTR(E.EMP_REG, 1, 2) || '-' ||
		        SUBSTR(E.EMP_REG, 3, 2) || '-' ||
		        SUBSTR(E.EMP_REG, 5, 2) ||
		        CASE WHEN SUBSTR(E.EMP_REG, 8, 1) IN ('1', '3') THEN ' (남)'
		             WHEN SUBSTR(E.EMP_REG, 8, 1) IN ('2', '4') THEN ' (여)'
		        END EMP_REG
		        , E.EMP_TEL
		        , C.COL_NM || ' ' || D.DEP_NM DEP_NM
		        , P.PRO_POS PRO_POS
		        , CASE WHEN E.EMP_RET IS NULL THEN '재직' ELSE '퇴직' END EMP_RET
		        , E.EMP_PIC
		FROM    PROFESSOR P, EMPLOYEE E, DEPARTMENT D, COLLEGE C
		WHERE   P.PRO_NO = E.EMP_NO
		AND     P.DEP_CD = D.DEP_CD
		AND     D.COL_CD = C.COL_CD
		AND     P.PRO_NO = #{empNo}
	</select>
	
	<select id="getYrNSem" parameterType="int" resultType="lecApply">
		SELECT  DISTINCT L.LECA_YR
		        , L.LECA_SEM
		FROM    LEC_APPLY L, LECTURE T
		WHERE   L.PRO_NO = #{empNo}
		AND		T.LECA_YN = 1
		ORDER BY L.LECA_YR DESC, LECA_SEM DESC
	</select>
	
	<select id="getCnt" parameterType="hashMap" resultType="int">
		SELECT  COUNT(L.LECA_CD)
		FROM    LEC_APPLY L
		WHERE   L.PRO_NO = #{empNo}
		<include refid="yrNsem"></include>
		AND     L.LECA_IMSI_YN IS NULL
	</select>
	
	<select id="list" parameterType="hashMap" resultType="lecApply">
		SELECT  U.LECA_CD,
		        U.PRO_NO,
		        U.LECA_YR || '/' || U.LECA_SEM LECA_YS,
		        U.COL_NM || ' ' || U.DEP_NM LECA_CODP,
		        NVL(U.LECA_TRG, 0) LECA_TRG,
		        U.SUB_CD,
		        U.LECA_NM,
		        NVL(U.LECA_CAP, 0) LECA_CAP,
		        U.LECA_CATE,
		        NVL(U.LECA_CRD, 0) LECA_CRD,
		        NVL(TRIM(U.MON || ' ' || U.TUE || ' ' || U.WED || ' ' || U.THU || ' ' || U.FRI), ' - ')
		        || ' (' || NVL(U.BLD_SNM, '아직 배정되지 않았습니다.') || ' ' || U.ROOM_NO || ')' LECA_TT,
		        U.LECA_GRADE,
		        U.LECA_DT,
		        CASE    WHEN U.LECA_YN = 0 THEN '승인대기'
		                WHEN U.LECA_YN = 1 THEN '승인'
		                WHEN U.LECA_YN = 2 THEN '반려'
		        END LECA_APPROVAL
		FROM
		(
		    SELECT  LECA_CD, SUB_CD, PRO_NO, LECA_CATE, LECA_YR, LECA_SEM, LECA_IMSI_YN,
		            LECA_NM, LECA_TRG, LECA_CRD, LECA_CAP, LECA_GRADE, LECA_YN, LECA_DT,
		            EMP_NM, BLD_SNM, ROOM_NO, COL_NM, DEP_NM,
		            MAX(MON) MON, MAX(TUE) TUE, MAX(WED) WED, MAX(THU) THU, MAX(FRI) FRI
		    FROM    VW_APPLY
		    GROUP BY    LECA_CD, SUB_CD, PRO_NO, LECA_CATE, LECA_YR, LECA_SEM, LECA_IMSI_YN,
		                LECA_NM, LECA_TRG, LECA_CRD, LECA_CAP, LECA_GRADE, LECA_YN, LECA_DT,
		                EMP_NM, BLD_SNM, ROOM_NO, COL_NM, DEP_NM
		) U
		WHERE   U.PRO_NO = #{proNo}
		AND     U.LECA_IMSI_YN IS NULL
		<include refid="yrNsem"></include>
		ORDER BY U.LECA_CD DESC
	</select>
	
	<select id="inquiryFormProInfo" parameterType="int" resultType="professor">
		SELECT  P.PRO_NO,
				E.EMP_NM,
		        C.COL_NM || ' ' || D.DEP_NM EMP_ADDR1,
		        D.DEP_TEL DEP_TEL,
		        E.EMP_TEL EMP_TEL
		FROM    EMPLOYEE E, PROFESSOR P, DEPARTMENT D, COLLEGE C
		WHERE   E.EMP_NO = P.PRO_NO
		AND     P.DEP_CD = D.DEP_CD
		AND     D.COL_CD = C.COL_CD
		AND     E.EMP_NO = #{proNo}
	</select>
	
	<select id="inquiryFormLecApInfo" parameterType="int" resultType="lecApply">
		SELECT  U.LECA_CD,
		        U.PRO_NO,
		        U.LECA_YR LECA_YR,
		        U.LECA_SEM LECA_SEM,
		        NVL(U.LECA_TRG, 0) LECA_TRG,
		        U.SUB_CD,
		        U.LECA_NM,
		        NVL(U.LECA_CAP, 0) LECA_CAP,
		        U.LECA_CATE,
		        NVL(U.LECA_CRD, 0) LECA_CRD,
		        U.LECA_GRADE,
		        U.LECA_DT,
		        U.SUB_NM,
		        U.LECA_CON,
		        U.LECA_BOOK,
		        U.LECA_MP,
		        U.LECA_FP,
		        U.LECA_TP,
		        U.LECA_AP
		FROM
		(
		    SELECT  LECA_CD, SUB_CD, PRO_NO, LECA_CATE, LECA_YR, LECA_SEM, LECA_IMSI_YN,
		            LECA_NM, LECA_TRG, LECA_CRD, LECA_CAP, LECA_GRADE, LECA_YN, LECA_DT,
		            EMP_NM, BLD_SNM, ROOM_NO, COL_NM, DEP_NM, SUB_NM, LECA_CON, LECA_BOOK,
		            LECA_MP, LECA_FP, LECA_TP, LECA_AP,
		            MAX(MON) MON, MAX(TUE) TUE, MAX(WED) WED, MAX(THU) THU, MAX(FRI) FRI
		    FROM    VW_APPLY
		    GROUP BY    LECA_CD, SUB_CD, PRO_NO, LECA_CATE, LECA_YR, LECA_SEM, LECA_IMSI_YN,
		                LECA_NM, LECA_TRG, LECA_CRD, LECA_CAP, LECA_GRADE, LECA_YN, LECA_DT,
		                EMP_NM, BLD_SNM, ROOM_NO, COL_NM, DEP_NM, SUB_NM, LECA_CON, LECA_BOOK,
		                LECA_MP, LECA_FP, LECA_TP, LECA_AP
		) U
		WHERE   U.LECA_CD = #{lecaCd}
		AND     U.LECA_IMSI_YN IS NULL
		ORDER BY U.LECA_CD DESC
	</select>
	
	<select id="inquiryWeekPlan" parameterType="int" resultType="weekplan">
		SELECT  WP_NO
		        ,LECA_CD
		        ,WP_CON
		FROM    WEEKPLAN
		WHERE   LECA_CD = #{lecaCd}
		ORDER BY WP_NO
	</select>
	
	<insert id="subjectSubmit" parameterType="int">
		INSERT INTO SUBJECT (
		            , SUB_CD
		            , PRO_NO
		            , DEP_CD
		            , SUB_NM
		) VALUES (
		    #{subCd}
		    , #{proNo}
		    , #{depCd}
		    , #{subNm}
		);
	</insert>
	
	<insert id="lectureSubmit" parameterType="int">
		INSERT INTO LECTURE (
		            , LECA_CD
		            , SUB_CD
		            , LEC_YN
		            , LEC_HCNT
		            , LECA_YN
		            , DEP_CD
		) VALUES (
		    #{lecaCd}
		    , #{subCd}
		    , #{lecHcnt}
		    , #{lecaYn}
		    , #{depCd}
		);
	</insert>
	
	<insert id="lecApplySubmit" parameterType="int">
		<selectKey order="BEFORE" keyProperty="leca_cd"
				resultType="int">
			SELECT MAX(LECA_CD)+1
			FROM LEC_APPLY
		</selectKey>
		INSERT INTO LEC_APPLY (
		            , LECA_CD
		            , LECA_YR
		            , LECA_SEM
		            , LECA_NM
		            , LECA_CON
		            , LECA_TRG
		            , LECA_CRD
		            , LECA_PER
		            , LECA_CAP
		            , LECA_TM
		            , LECA_WK
		            , LECA_HALL
		            , LECA_UNIT
		            , LECA_BOOK
		            , LECA_NOTE
		            , LECA_DT
		            , LECA_GRADE
		            , LECA_IMSI_YN
		            , LECA_CATE
		            , LECA_MP
		            , LECA_FP
		            , LECA_TP
		            , LECA_AP
		            , PRO_NO
		) VALUES (
		    #{lecaCd}
		    , #{lecaYr}
		    , #{lecaSem}
		    , #{lecaNm}
		    , #{lecaCon}
		    , #{lecaTrg}
		    , #{lecaCrd}
		    , #{lecaPer}
		    , #{lecaCap}
		    , #{lecaTm}
		    , #{lecaWk}
		    , #{lecaBook}
		    , #{lecaNote}
		    , SYSDATE
		    , #{lecaGrade}
		    , 0
		    , #{lecaCate}
		    , #{lecaMp}
		    , #{lecaFp}
		    , #{lecaTp}
		    , #{lecaAp}
		    , #{proNo}
		);
	</insert>
	
	
</mapper>







