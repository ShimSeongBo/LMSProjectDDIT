<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.LectureApplyMapper">
	<sql id="yrNsem">
		<if test="yrNsem != null and !yrNsem.equals('')">
			AND     U.LECA_YR || U.LECA_SEM = #{yrNsem}
		</if>
	</sql>

<!-- 	<resultMap type="professor" id="lecApplyMap"> -->
<!-- 		<result property="proPos" column="PRO_POS" /> -->
<!-- 		<result property="proNo" column="PRO_NO" /> -->
		
<!-- 		<collection property="employeeList" resultMap="authMap"></collection> -->
<!-- 	</resultMap> -->
	
<!-- 	<resultMap type="employee" id="authMap"> -->
<!-- 		<result property="empNo" column="EMP_NO" /> -->
<!-- 		<result property="empNm" column="EMP_NM" /> -->
<!-- 		<result property="empTel" column="EMP_TEL" /> -->
<!-- 		<result property="empReg" column="EMP_REG" /> -->
<!-- 	</resultMap> -->

<!-- 	<select id="detail" parameterType="int" resultMap="lecApplyMap"> -->
<!-- 		SELECT  P.PRO_NO -->
<!-- 		        , P.DEP_CD -->
<!-- 		        , P.PRO_POS -->
<!-- 		        , E.EMP_NO -->
<!-- 		        , E.EMP_NM -->
<!-- 		        , E.EMP_NME -->
<!-- 		        , E.EMP_TEL -->
<!-- 		        , E.EMP_TEL2 -->
<!-- 		        , E.EMP_ZIP -->
<!-- 		        , E.EMP_ADDR1 -->
<!-- 		        , E.EMP_ADDR2 -->
<!-- 		        , E.EMP_REG -->
<!-- 		        , E.EMP_BANK_CD -->
<!-- 		        , E.EMP_DEPO -->
<!-- 		        , E.EMP_ACT -->
<!-- 		        , E.EMP_PIC -->
<!-- 		        , E.EMP_JOIN -->
<!-- 		        , E.EMP_RET -->
<!-- 		FROM    PROFESSOR P INNER JOIN EMPLOYEE E ON(P.PRO_NO = E.EMP_NO) -->
<!-- 		WHERE   P.PRO_NO = #{proNo} -->
<!-- 	</select> -->
	
	<select id="proInfo" parameterType="int" resultType="professor">
		SELECT  P.PRO_NO
		        , E.EMP_NM
		        , CASE  WHEN SUBSTR(E.EMP_REG, 8, 1) in ('1', '2') THEN '19'
		                WHEN SUBSTR(E.EMP_REG, 8, 1) in ('3', '4') THEN '20'
		        END || 
		        SUBSTR(E.EMP_REG, 1, 2) || '-' ||
		        SUBSTR(E.EMP_REG, 3, 2) || '-' ||
		        SUBSTR(E.EMP_REG, 5, 2) ||
		        CASE WHEN SUBSTR(E.EMP_REG, 8, 1) IN ('1', '3') THEN ' (남)'
		             WHEN SUBSTR(E.EMP_REG, 8, 1) IN ('2', '4') THEN ' (여)'
		        END EMP_REG
		        , E.EMP_TEL
		        , C.COL_NM || ' ' || D.DEP_NM DEP_NM
		        , P.PRO_POS PRO_POS
		        , CASE WHEN E.EMP_RET IS NULL THEN '재직' ELSE '퇴직' END EMP_RET
		        , E.EMP_PIC
		FROM    PROFESSOR P, EMPLOYEE E, DEPARTMENT D, COLLEGE C
		WHERE   P.PRO_NO = E.EMP_NO
		AND     P.DEP_CD = D.DEP_CD
		AND     D.COL_CD = C.COL_CD
		AND     P.PRO_NO = #{empNo}
	</select>
	
	<select id="getYrNSem" parameterType="int" resultType="lecApply">
		SELECT  L.LECA_YR
		        , CASE WHEN SUBSTR(L.LECA_SEM, 4, 2) IN ('2', '3', '4', '5', '6', '7', '8') THEN ' 1'
		               WHEN SUBSTR(L.LECA_SEM, 4, 2) IN ('9') THEN ' 2'
		               WHEN SUBSTR(L.LECA_SEM, 4, 1) IN ('1', '2') THEN ' 2'
		               END  LECA_SEM
		FROM    LEC_APPLY L, LECTURE T
		WHERE   L.PRO_NO = #{empNo}
		AND		T.LECA_YN = 1
		AND     L.LECA_CD = T.LECA_CD
		ORDER BY L.LECA_YR DESC, LECA_SEM DESC
	</select>
	
	<select id="getCnt" parameterType="hashMap" resultType="int">
		SELECT  COUNT(L.LECA_CD)
		FROM    LEC_APPLY L
		WHERE   L.PRO_NO = #{empNo}
		<include refid="yrNsem"></include>
		AND     L.LECA_IMSI_YN IS NULL
	</select>
	
	<select id="list" parameterType="hashMap" resultType="lecApply">
		SELECT  U.LECA_CD,
		        U.PRO_NO,
		        U.LECA_YR || '/' || U.LECA_SEM || '학기' LECA_YS,
		        U.COL_NM || ' ' || U.DEP_NM LECA_CODP,
		        NVL(U.LECA_TRG, 0) LECA_TRG,
		        U.SUB_CD,
		        U.LECA_NM,
		        NVL(U.LECA_CAP, 0) LECA_CAP,
		        U.LECA_CATE,
		        NVL(U.LECA_CRD, 0) LECA_CRD,
		        NVL(TRIM(U.MON || ' ' || U.TUE || ' ' || U.WED || ' ' || U.THU || ' ' || U.FRI), ' - ')
		        || ' (' || NVL(U.BLD_SNM, '아직 배정되지 않았습니다.') || ' ' || U.ROOM_NO || ')' LECA_TT,
		        U.LECA_GRADE,
		        U.LECA_DT,
		        CASE    WHEN U.LECA_YN = 0 THEN '승인대기'
		                WHEN U.LECA_YN = 1 THEN '승인'
		                WHEN U.LECA_YN = 2 THEN '반려'
		        END LECA_APPROVAL
		FROM
		(
		    SELECT  LECA_CD, SUB_CD, PRO_NO, LECA_CATE, LECA_YR, LECA_SEM, LECA_IMSI_YN,
		            LECA_NM, LECA_TRG, LECA_CRD, LECA_CAP, LECA_GRADE, LECA_YN, LECA_DT,
		            EMP_NM, BLD_SNM, ROOM_NO, COL_NM, DEP_NM,
		            MAX(MON) MON, MAX(TUE) TUE, MAX(WED) WED, MAX(THU) THU, MAX(FRI) FRI
		    FROM    VW_APPLY
		    GROUP BY    LECA_CD, SUB_CD, PRO_NO, LECA_CATE, LECA_YR, LECA_SEM, LECA_IMSI_YN,
		                LECA_NM, LECA_TRG, LECA_CRD, LECA_CAP, LECA_GRADE, LECA_YN, LECA_DT,
		                EMP_NM, BLD_SNM, ROOM_NO, COL_NM, DEP_NM
		) U
		WHERE   U.PRO_NO = 1
		AND     U.LECA_IMSI_YN IS NULL
		ORDER BY U.LECA_CD DESC
	</select>
	
</mapper>







