<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일은 여러개일 수 있음. 
이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="kr.or.ddit.mapper.CounselMapper">

<select id="listOfProfessor" parameterType="int" resultType="Counsel">
SELECT 
E.EMP_NM
,D.PRO_NO
FROM PROFESSOR P, EMPLOYEE E, STUDENT S, DEPARTMENT D
WHERE S.STU_NO = #{stuNo}
AND D.DEP_CD = P.DEP_CD
AND P.PRO_NO = S.PRO_NO
AND P.PRO_NO = E.EMP_NO
</select>
<!-- 학생의 상담 신청 목록 -->
<select id="studentApplyList"  parameterType="int" resultType="Counsel">
SELECT 
  C.CNSL_CD
, C.STU_NO 
, C.CNSL_CATE 
, C.CNSL_TTL
, C.CNSL_CON
, C.CNSL_REG 
, C.CNSL_DT
, C.CNSL_RPL
, C.PRO_NO
, E.EMP_NM
, S.STU_NM
, C.CNSL_TYPE
FROM COUNSEL C, EMPLOYEE E, PROFESSOR P, STUDENT S, DEPARTMENT D
WHERE 
C.STU_NO = #{stu_no}
AND C.STU_NO = S.STU_NO
AND S.PRO_NO = P.PRO_NO
AND P.PRO_NO = E.EMP_NO
AND D.DEP_CD = P.DEP_CD
</select>
<!-- 학생의 상담 신청 -->
<insert id="applyInsert"  parameterType="Counsel">
INSERT INTO COUNSEL (
  CNSL_CD
, STU_NO
, CNSL_CATE
, PRO_NO
, CNSL_TYPE
, CNSL_REG
, CNSL_TTL
, CNSL_CON
, CNSL_DT

)
VALUES(
<if test="cnslCd == null or cnslCd =='' ">
SUBSTR(TO_NUMBER(TO_CHAR(SYSDATE,'YYYYMMDD')),1,6)||'000'||COUNSEL_SEQ.NEXTVAL
</if>
, #{stuNo}
, #{cnslCate}
, #{proNo}
, #{cnslType}
, SYSDATE
<if test="cnslTtl != null or cnslTtl !='' ">
, #{cnslTtl}
</if>
<if test="cnslCon != null or cnslCon !='' ">
, #{cnslCon}
</if>
, #{cnslDt,jdbcType=DATE}
)
</insert>
<!-- 교수의 상담 답변 -->
<update id="applyAnswerUpdate" parameterType="Counsel">
UPDATE COUNSEL 
SET
  CNSL_DT = SYSDATE 
, CNSL_RPL = #{cnslRpl}
, PRO_NO = #{proNo}
WHERE CNSL_CD = #{cnslCd}
</update>
<!-- 교수의 상담 리스트 조회 -->
<select id="professorCounselList" parameterType="int" resultType="Counsel">
SELECT 
  C.CNSL_CD
, C.STU_NO
, C.CNSL_CATE
, C.CNSL_TTL
, C.CNSL_CON
, C.CNSL_REG
, C.CNSL_DT
, C.CNSL_RPL
, C.PRO_NO
, S.STU_NM
, C.CNSL_TYPE
FROM COUNSEL C, EMPLOYEE E, PROFESSOR P, STUDENT S, DEPARTMENT D
WHERE 
C.PRO_NO = #{proNo}
AND C.STU_NO = S.STU_NO
AND S.PRO_NO = P.PRO_NO
AND P.PRO_NO = E.EMP_NO
AND D.DEP_CD = P.DEP_CD
</select>
<select id="answerDetail" parameterType="Long" resultType="Counsel">
SELECT
 C.CNSL_CD
,S.STU_NM
,C.CNSL_TTL
,C.CNSL_CON
,C.CNSL_RPL    
FROM COUNSEL C, STUDENT S 
WHERE C.CNSL_CD = #{cnslCd}
AND C.STU_NO = S.STU_NO
</select>
<select id="answerNoteDetail" parameterType="Long" resultType="Counsel">
SELECT
 C.CNSL_CD
,C.CNSL_CATE
,S.STU_NM
,C.CNSL_DT
,C.CNSL_TTL
,C.CNSL_CON
,C.CNSL_RPL
,E.EMP_NM
FROM COUNSEL C, STUDENT S, EMPLOYEE E, PROFESSOR P 
WHERE C.CNSL_CD = #{cnslCd}
AND C.STU_NO = S.STU_NO
AND S.PRO_NO = P.PRO_NO
AND C.PRO_NO = P.PRO_NO
AND E.EMP_NO = P.PRO_NO
</select>
<select id="studentNameByCounsels" parameterType="Long" resultType="String">
SELECT 
S.STU_NM
FROM COUNSEL C, STUDENT S
WHERE C.CNSL_CD = #{cnslCd}
AND C.STU_NO = S.STU_NO
</select>
<update id="applyModify" parameterType="Counsel">
UPDATE COUNSEL 
SET 
CNSL_CON = #{cnslCon} 
WHERE CNSL_CD = #{cnslCd}
</update>
</mapper>

