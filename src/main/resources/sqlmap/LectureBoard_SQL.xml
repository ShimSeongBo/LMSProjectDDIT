<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.LectureBoardMapper">
<sql id="where">
		<!-- 자료 검색(전체) -->
		and(
		 LDT_TTL    LIKE '%'||#{keyWord}||'%'
        OR    LDT_WRITER LIKE '%'||#{keyWord}||'%')
	
	</sql>
	<sql id="where2">
		<!-- 강의 검색 -->
		 and LDT_TTL    LIKE '%'||#{keyWord}||'%'
	</sql>
	<sql id="where3">
		<!-- 강의 검색 -->
		and	LDT_WRITER LIKE '%'||#{keyWord}||'%'
	</sql>
	
	<resultMap type="attach" id="attachMap">
		<result property="atchFileId"     column="ATCH_FILE_ID" />
		<result property="fileSn"         column="FILE_SN" />
		<result property="fileStreCours"  column="FILE_STRE_COURS" />
		<result property="streFileNm"     column="STRE_FILE_NM" />
		<result property="orignlFileNm"   column="ORIGNL_FILE_NM" />
		<result property="fileExtsn"      column="FILE_EXTSN" />
		<result property="fileSize"       column="FILE_SIZE" />
		<result property="createDt"       column="CREATE_DT" />
	</resultMap>
	
	<!-- lecture resultMap======================================================================== -->
	<resultMap type="lecture" id="lectureMap">
		<result property="lecaCd"         column="LECA_CD" />
		<result property="subCd"          column="SUB_CD" />
		<result property="lecYn"          column="LEC_YN" />
		<result property="lecHcnt"        column="LEC_HCNT" />
		<result property="lecaYn"         column="LECA_YN" />
		<result property="depCd"          column="DEP_CD" />
		<collection property="lecApply"   resultMap="lecApplyMap"></collection>
		<collection property="lecDataList"   resultMap="lecDataMap"></collection>
	</resultMap>
	
	<resultMap type="lecApply" id="lecApplyMap">
		<result property="lecaCd"     column="LECA_CD" />
		<result property="lecaYr"     column="LECA_YR" />
		<result property="lecaSem"    column="LECA_SEM" />
		<result property="lecaNm"     column="LECA_NM" />
		<result property="lecaCon"    column="LECA_CON" />
		<result property="lecaTrg"    column="LECA_TRG" />
		<result property="lecaCrd"    column="LECA_CRD" />
		<result property="lecaPer"    column="LECA_PER" />
		<result property="lecaCap"    column="LECA_CAP" />
		<result property="lecaTt"     column="LECA_TT" />
		<result property="lecaHall"   column="LECA_HALL" />
		<result property="lecaUnit"   column="LECA_UNIT" />
		<result property="lecaBook"   column="LECA_BOOK" />
		<result property="lecaNote"   column="LECA_NOTE" />
		<result property="lecaDt"     column="LECA_DT" />
		<result property="lecaGrade"  column="LECA_GRADE" />
		<result property="lecaImsiYn" column="LECA_IMSI_YN" />
		<result property="lecaCate"   column="LECA_CATE" />
		<result property="lecaMp"     column="LECA_MP" />
		<result property="lecaFp"     column="LECA_FP" />
		<result property="lecaTp"     column="LECA_TP" />
		<result property="lecaAp"     column="LECA_AP" />
	</resultMap>	
	
	<resultMap type="lecData" id="lecDataMap">
		<result property="ldtCd"      column="LDT_CD" />
		<result property="lecaCd"     column="LECA_CD" />
		<result property="ldtTtl"     column="LDT_TTL" />
		<result property="ldtCon"     column="LDT_CON" />
		<result property="ldtReg"     column="LDT_REG" />
		<result property="ldtWriter"  column="LDT_WRITER" />
		<result property="atchFileId" column="ATCH_FILE_ID" />
		<result property="ldtCount"   column="LDT_COUNT" />
		<collection property="attachList"   resultMap="attachMap"></collection>
	</resultMap>
	
	<resultMap type="test" id="testMap">
		<result property="testCd"      column="TEST_CD"/>
		<result property="lecaCd"      column="LECA_CD"/>
		<result property="testNm"      column="TEST_NM" />
		<result property="testCon"     column="TEST_CON"/>
		<result property="testReg"     column="TEST_REG" />
		<result property="testSdt"     column="TEST_SDT" />
		<result property="testEdt"     column="TEST_EDT" />
		<collection property="stuTest" resultMap="stuTestMap"></collection>
		<collection property="testQList"   resultMap="testQMap"></collection>
		<collection property="stdList" resultMap="stdMap"></collection>
	</resultMap>	
	
	
	<resultMap type="testQ" id="testQMap">               
		<result property="teqCd "     column="TEQ_CD" />      
		<result property="testCd"     column="TEST_CD" />      
		<result property="teqSeq"     column="TEQ_SEQ" />     
		<result property="teqOption1" column="TEQ_OPTION1" />      
		<result property="teqOption2" column="TEQ_OPTION2" />     
		<result property="teqOption3" column="TEQ_OPTION3" />     
		<result property="teqOption4" column="TEQ_OPTION4" />     
		<result property="teqAnswer"  column="TEQ_ANSWER" /> 
		<result property="teqCon"  column="TEQ_CON" /> 
	</resultMap>	                                           
	
	<resultMap type="stuTest" id="stuTestMap">
		<result property="stuNo"  column="STU_NO" />
		<result property="lecaCd"   column="LECA_CD" />
		<result property="testCd"   column="TEST_CD" />
		<result property="stScore" column="ST_SCORE" />
		<result property="stYn"    column="ST_YN" />
	</resultMap>
	<resultMap type="std"  id="stdMap">
		<result property="teqCd"     column="TEQ_CD"/>
		<result property="stuNo"    column="STU_NO"/>
		<result property="lecaCd"     column="LECA_CD"/>
		<result property="stdAnswer" column="STD_ANSWER"/>
	</resultMap>
	
	
	
	
	<select id="dataList" parameterType="string" resultMap="lectureMap">
		SELECT
             la.leca_nm
			,ld.LDT_CD
			,ld.LECA_CD
			,ld.LDT_TTL
			,ld.LDT_CON
			,ld.LDT_REG
			,ld.LDT_WRITER
			,ld.ATCH_FILE_ID
			,ld.LDT_COUNT
		FROM LEC_DATA ld,lecture l, lec_Apply la
        where la.leca_Cd = l.leca_cd
        and l.leca_cd = ld.leca_cd
        and l.leca_Cd = #{lecaCd}
		<if test="category == 1 and keyWord != null and keyWord !=''">
			<include refid="where"></include>
		</if>
		<if test="category == 2 and keyWord != null and keyWord !=''">
			<include refid="where2"></include>
		</if>
		<if test="category == 3 and keyWord != null and keyWord !=''">
			<include refid="where3"></include>
		</if>
	</select>
	
	<select id="dataDetail" parameterType="String" resultMap="lecDataMap">
		SELECT *
		FROM LEC_DATA ld, ATTACH A
		WHERE LD.ATCH_FILE_ID = A.ATCH_FILE_ID (+)
		AND LDT_CD = #{ldtCd}
	
	</select>
	
	<!-- 과제 수정 -->
	<update id="dataUpdate" parameterType="hashMap">
		UPDATE
		LEC_DATA
		<set>
			LDT_TTL=#{ldtTtl}
			,LDT_CON=#{ldtCon}
			,LDT_WRITER=#{ldtWriter}
			<if test='result > "0"'>
				, ATCH_FILE_ID = (SELECT MAX(ATCH_FILE_ID) FROM ATTACH)
			</if>
		</set>
		WHERE
		LDT_CD=#{ldtCd}
	</update>
	
	<delete id="dataDelete" parameterType="String">
		DELETE 
		FROM LEC_DATA
		WHERE LDT_CD = #{ldtCd}
	</delete>
	
	<insert id="dataInsert1" parameterType="hashMap">
		<selectKey keyProperty="ldtCd" order="BEFORE"
			resultType="int">
			SELECT NVL(MAX(LDT_CD),0)+1 FROM LEC_DATA
		</selectKey>
		insert into LEC_DATA (
					LDT_CD
					,LECA_CD
					,LDT_TTL
					,LDT_CON
					,LDT_REG
					,ATCH_FILE_ID
					,LDT_WRITER)
		values(		
					#{ldtCd}
					,#{lecaCd}
					,#{ldtTtl}
					,#{ldtCon}
					,SYSDATE
					,(SELECT MAX(ATCH_FILE_ID) FROM ATTACH)
					,(select emp_nm from EMPLOYEE where emp_no = #{empNo}))
						
						
	</insert>

	<insert id="dataInsert2" parameterType="hashMap">
		<selectKey keyProperty="ldtCd" order="BEFORE"
			resultType="int">
			SELECT NVL(MAX(LDT_CD),0)+1 FROM LEC_DATA
		</selectKey>
		insert into LEC_DATA (
					 LDT_CD
					,LECA_CD
					,LDT_TTL
					,LDT_CON
					,LDT_REG
					,LDT_WRITER)
		values(
					 #{ldtCd}
					,#{lecaCd}
					,#{ldtTtl}
					,#{ldtCon}
					,SYSDATE
					,(select emp_nm from EMPLOYEE where emp_no = #{empNo}))
	</insert>
	
	<!-- 시험 리스트 -->
	<select id="testList" parameterType="String" resultType="test">
	SELECT 
	     TEST_CD
	    ,LECA_CD
	    ,TEST_NM
	    ,TEST_CON
	    ,TEST_REG
	    ,TEST_SDT
	    ,TEST_EDT
	FROM 
		 TEST
	WHERE 
		 LECA_CD = #{lecaCd}
	ORDER BY 	
		 TEST_CD DESC	 
	</select>
	
	<!-- 강의 계획서 조회 -->
	<select id="lecApplySearch" parameterType="String" resultType="lecApply">
	select
		 LECA_CD
		,LECA_YR
		,LECA_SEM
		,LECA_NM
		,LECA_CON
		,LECA_TRG
		,LECA_CRD
		,LECA_PER
		,LECA_CAP
		,LECA_TT
		,LECA_HALL
		,LECA_UNIT
		,LECA_BOOK
		,LECA_NOTE
		,LECA_DT
		,LECA_GRADE
		,LECA_IMSI_YN
		,LECA_CATE
		,LECA_MP
		,LECA_FP
		,LECA_TP
		,LECA_AP
		,PRO_NO
	FROM LEC_APPLY
	WHERE LECA_CD = #{lecaCd}
	</select>
	
	<!-- 시험 틀 추가 -->
	<insert id="testInsert" parameterType="test">
		<selectKey order="BEFORE" keyProperty="testCd" resultType="int" >
			SELECT NVL(MAX(TEST_CD),0)+1 FROM TEST					
		</selectKey>
		INSERT INTO TEST(
						  TEST_CD
						 ,LECA_CD
						 ,TEST_NM 
		                 ,TEST_CON
		                 ,TEST_SDT
		                 ,TEST_EDT
		                 )
				VALUES(
						  #{testCd}
						 ,#{lecaCd}
						 ,#{testNm}
						 ,#{testCon}
						 ,#{testSdt}
						 ,#{testEdt}
				)
	</insert>

	<insert id="testQInsert" parameterType="testQ">
			INSERT INTO TEST_Q(
						 TEQ_CD
						,TEST_CD
						,TEQ_SEQ
						,TEQ_OPTION1
						,TEQ_OPTION2
						,TEQ_OPTION3
						,TEQ_OPTION4
						,TEQ_ANSWER
						,TEQ_CON
			) 
			VALUES (
						 (SELECT NVL(MAX(TEQ_CD),0)+1 FROM TEST_Q)		
			            ,#{testCd}
			            ,(SELECT NVL(MAX(TEQ_SEQ),0)+1 FROM TEST_Q WHERE TEST_CD = #{testCd})
			            ,#{teqOption1}
			            ,#{teqOption2}
			            ,#{teqOption3}
			            ,#{teqOption4}
					    ,#{teqAnswer}
					    ,#{teqCon}
			)
	</insert>
	
	<select id="testDetail" parameterType="String" resultMap="testMap">
		SELECT 
			 T.TEST_CD
			,T.LECA_CD
			,T.TEST_NM
			,T.TEST_CON
			,T.TEST_REG
			,T.TEST_SDT
			,T.TEST_EDT
			
			,TQ.TEST_CD
			,TQ.TEQ_SEQ
			,TQ.TEQ_OPTION1
			,TQ.TEQ_OPTION2
			,TQ.TEQ_OPTION3
			,TQ.TEQ_OPTION4
			,TQ.TEQ_ANSWER
			,TQ.TEQ_CON
		FROM 
			TEST T, TEST_Q TQ
		WHERE 
			T.TEST_CD = TQ.TEST_CD
			AND T.TEST_CD = #{testCd}
		ORDER BY TQ.TEQ_SEQ ASC		
	</select>
	
	<delete id="testDelete" parameterType="String">
		DELETE FROM TEST
		WHERE TEST_CD = #{testCd}
	</delete>
	<delete id="testQDelete" parameterType="String">
		DELETE FROM TEST_Q
		WHERE TEST_CD = #{testCd}
	</delete>
		
	<!-- 시험 제출 여부 확인 -->
	<select id="checkTestSubmit" resultMap="testMap" parameterType="String">
							SELECT  
		                         TT.TEST_CD AS TTTESTCD
		                        ,TT.LECA_CD AS TTLECACD
		                        ,TT.TEST_NM
		                        ,TT.TEST_CON
		                        ,TT.TEST_REG
		                        ,TT.TEST_SDT
		                        ,TT.TEST_EDT
		                        ,ST.LECA_CD AS STLECACD
		                        ,ST.TEST_CD AS STTESTCD
		                        ,ST.STU_NO
		                        ,ST.ST_SCORE
		                        ,ST.ST_YN 
		                    FROM STU_TEST ST, TEST TT
		                    WHERE ST.TEST_CD = TT.TEST_CD
		                    AND ST.STU_NO = #{stuNo}
	</select>	

	<insert id="stuTestInsert" parameterType="stuTest">
		INSERT INTO STU_TEST (   STU_NO
								,LECA_CD
								,TEST_CD
								,ST_SCORE
								)
					  VALUES ( 
						  		 #{stuNo}
								,#{lecaCd}
								,#{testCd}
								,ROUND((#{stScore}/(5* (SELECT COUNT(TEQ_CD) TEQ_CD FROM TEST_Q WHERE TEST_CD = #{testCd})))*100)
							 )
		
	</insert>
	
	
	
	
	
	
	
	
	
</mapper>